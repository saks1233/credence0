{"name": "test_CredKart_Title_001", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [WinError 3] The system cannot find the path specified", "trace": "self = <test_CredKart_User_Profile_001.Test_User_Profile_Class object at 0x000001EA32CCA0D0>\n\n    @allure.severity(allure.severity_level.CRITICAL)\n    @allure.feature(\"CredKart login\")\n    @allure.story(\"story: CredKart Login\")\n    @allure.description(\"This test case is to validate Credkart Title functionality\")\n    @allure.issue(\"issue : https://credence.in/\")\n    @allure.link(\"https://credence.in/\")\n    @allure.testcase(\"https://credence.in/\")\n    @allure.epic(\"Epic : CredKart\")\n    @allure.sub_suite(\"CredKart Login\")\n    @allure.title(\"test_CredKart_Title_001\")\n    @pytest.mark.flaky(reruns=1, reruns_delay=1)\n    @pytest.mark.dependency(name =\"test_CredKart_Title_001\")\n    @pytest.mark.smoke\n    @pytest.mark.web\n    def test_CredKart_Title_001(self):\n        self.log.info(\"Testcase test_CredKart_Title_001 is started\")\n        self.log.info(f\"Opening browser and landing on login page--{self.login_url}\")\n        self.driver.get(self.login_url)\n        self.driver.maximize_window()\n        # self.log.debug(\"This is info\")\n        # self.log.info(\"This is info\")\n        # self.log.warning(\"This is warning\")\n        # self.log.error(\"This is error\")\n        # self.log.critical(\"This is critical\")\n    \n        self.log.info(\"Checking title of login page\")\n        if self.driver.title == \"CredKart1\":\n            self.log.info(\"Landed on correct page and it's title is: \" + self.driver.title)\n            #print(\"you are landed on correct page and it's title is:\", self.driver.title)\n            self.driver.save_screenshot(\n                r\"D:\\Batch Notes\\Automation Testing may 2025\\04. CredKart_Pytest_Framework\\Screenshots\\User login Successfully.png\"\n                )\n            allure.attach.file(r\"D:\\Batch Notes\\Automation Testing may 2025\\04. CredKart_Pytest_Framework\\Screenshots\\User login Successfully.png\", name=\"User login Successfully\", attachment_type=allure.attachment_type.PNG)\n            assert True\n        else:\n            self.log.info(\"Landed on incorrect page and it's title is: \" + self.driver.title)\n            self.log.info(\"Taking screenshot\")\n            self.driver.save_screenshot(r\"D:\\Batch Notes\\Automation Testing may 2025\\04. CredKart_Pytest_Framework\\Screenshots\\User login Failed.png\")\n>           allure.attach.file(r\"D:\\Batch Notes\\Automation Testing may 2025\\04. CredKart_Pytest_Framework\\Screenshots\\User login Failed.png\", name=\"User login Failed\", attachment_type=allure.attachment_type.PNG)\n\ntestCases\\test_CredKart_User_Profile_001.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\_allure.py:213: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_pytest\\listener.py:256: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\reporter.py:160: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_hooks.py:512: in __call__\n    return self._hookexec(self.name, self._hookimpls.copy(), kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\pluggy\\_manager.py:120: in _hookexec\n    return self._inner_hookexec(hook_name, methods, kwargs, firstresult)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\site-packages\\allure_commons\\logger.py:39: in report_attached_file\n    shutil.copy2(source, destination)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nsrc = 'D:\\\\Batch Notes\\\\Automation Testing may 2025\\\\04. CredKart_Pytest_Framework\\\\Screenshots\\\\User login Failed.png'\ndst = WindowsPath('C:/Users/user/PycharmProjects/PythonProject/04.credkart3/allure-results/f1a66b50-2c1e-4d3d-b19c-eec07c85c12a-attachment.png')\n\n    def copy2(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data and metadata. Return the file's destination.\n    \n        Metadata is copied with copystat(). Please see the copystat function\n        for more information.\n    \n        The destination may be a directory.\n    \n        If follow_symlinks is false, symlinks won't be followed. This\n        resembles GNU's \"cp -P src dst\".\n        \"\"\"\n        if os.path.isdir(dst):\n            dst = os.path.join(dst, os.path.basename(src))\n    \n        if hasattr(_winapi, \"CopyFile2\"):\n            src_ = os.fsdecode(src)\n            dst_ = os.fsdecode(dst)\n            flags = _winapi.COPY_FILE_ALLOW_DECRYPTED_DESTINATION # for compat\n            if not follow_symlinks:\n                flags |= _winapi.COPY_FILE_COPY_SYMLINK\n            try:\n>               _winapi.CopyFile2(src_, dst_, flags)\nE               FileNotFoundError: [WinError 3] The system cannot find the path specified\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\shutil.py:453: FileNotFoundError"}, "description": "This test case is to validate Credkart Title functionality", "attachments": [{"name": "User login Failed", "source": "f1a66b50-2c1e-4d3d-b19c-eec07c85c12a-attachment.png", "type": "image/png"}, {"name": "log", "source": "c48282e4-b966-454b-aea4-cac2207ab3c3-attachment.txt", "type": "text/plain"}], "start": 1750161598745, "stop": 1750161599710, "uuid": "b2cc10ce-8cd7-4738-8dfa-70c2ab2ae12a", "historyId": "76b5b08c264e4651792b77a22b6aac48", "testCaseId": "76b5b08c264e4651792b77a22b6aac48", "fullName": "testCases.test_CredKart_User_Profile_001.Test_User_Profile_Class#test_CredKart_Title_001", "labels": [{"name": "epic", "value": "Epic : CredKart"}, {"name": "feature", "value": "CredKart login"}, {"name": "story", "value": "story: CredKart Login"}, {"name": "severity", "value": "critical"}, {"name": "subSuite", "value": "CredKart Login"}, {"name": "tag", "value": "web"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "testCases"}, {"name": "suite", "value": "test_CredKart_User_Profile_001"}, {"name": "host", "value": "DESKTOP-CPLT9VQ"}, {"name": "thread", "value": "652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testCases.test_CredKart_User_Profile_001"}], "links": [{"type": "tms", "url": "https://credence.in/", "name": "https://credence.in/"}, {"type": "link", "url": "https://credence.in/", "name": "https://credence.in/"}, {"type": "issue", "url": "issue : https://credence.in/", "name": "issue : https://credence.in/"}]}